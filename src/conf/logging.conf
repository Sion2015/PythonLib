[loggers]
keys = root, debug_log, trade

[handlers]
keys = verbose, warning_file, info_file, console, trade_file, null

[formatters]
keys = minimal, normal, trade

###########
# Loggers #
###########

[logger_root]
level = NOTSET
handlers = console

[logger_debug_log]
level = DEBUG
qualname = debug
handlers = verbose, warning_file, info_file

[logger_sqlalchemy]
level = DEBUG
handlers = verbose, warning_file, info_file
qualname = sqlalchemy
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARNING" logs neither.  (Recommended for production systems.)

[logger_trade]
level = INFO
qualname = trade
handlers = trade_file

################
# Log Handlers #
################

[handler_verbose]
class = handlers.MyFileHandler
level = NOTSET
formatter = normal
args=('verbose.log', 'w')

[handler_warning_file]
class = handlers.MyFileHandler
level = WARNING
formatter = normal
args=('warning.log', 'a')

[handler_info_file]
class = handlers.MyTimeRotatingFileHandler
level = INFO
formatter = normal
args = ('info.log', 'H', 1, 0)

[handler_console]
class = StreamHandler
level = DEBUG
formatter = minimal
args= (sys.stdout,)

[handler_trade_file]
class = handlers.MyFileHandler
level = INFO
formatter = trade
args= ('trade.csv', 'a')

[handler_null]
class = logging.NullHandler
args = ()

##################
# Log Formatters #
##################

[formatter_normal]
format = [%(asctime)s][%(filename)s][func_name:%(funcName)s][line:%(lineno)d][%(levelname)s][process:%(process)d][thread:%(thread)d] %(message)s

[formatter_minimal]
format = %(asctime)s [%(levelname)s] %(message)s

[formatter_trade]
format= %(asctime)s, %(message)s